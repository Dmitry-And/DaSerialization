
===================================================================================
	PLAN
===================================================================================

+	Core 	move non-root Container.(De)Serialize API to stream
+				don't pass container as an argument for (de)serialization
+				add more strict constrains to IStream/I(De)serializer type arguments
+	Core 	in BinaryStream remove CheckWritingAllowed method
-	Core 	add Read/WriteString overloads with explicit encodings - too hard, requires a lot of copy/paste from BinaryReader/Writer classes around Decoder logic
+ 	Core 	add Read/Write ASCII overloads for String/Char in BinaryStreamReader/Writer
+	Core 	use WriteMetadata in AArray(De)serializer
+	Core 	add compilation error if char was passed to Write(U)IntX method
+	Core 	use WriteMetadata in ArraySerializationExtensions
+	Core 	get rid of GetReader/GetWriter methods (add stream overrides)
+	Core	inspect deserialization for primitive types
	Edtr	editor support for primitive types
				show/hide
				collapse similar into one entry
	Core 	make packed read/write methods via partial class, not extension methods
				inspect packed types deserialization
	Core 	add meta-info to deserialization methods as optional parameter
				display this meta-info in container inspector
	Core 	check (de)serializers type argument covariance is correct in SerializerStorage.Init
	Othr	extend readme
				motivation
				concepts
				API
				Unity integration
	Edtr 	add object-view wrapper class for ContainerEditorView
				move all strings from InnerObjectInfo to view wrapper
				cache all ContentGUI values in view wrapper
	Edtr 	show content of internal containers
				propagate 'old serializers' warning from inner to root container
	Edtr 	allow to remove objects from container in the inspector
				support inner container object removal
	Core 	unify 'size to string' method and move to common tools
	Edtr 	allow to see raw byte data of an object/value
				hex format
				allow to select 1-9 bytes and show content of those bytes as possible primitive type
					binary representation for all selected bytes
					1: byte, sbyte, packed bools, packed long, packed ulong, char (ASCII)
					2: short, ushort, packed long, packed ulong, char (UTF8)
					3: packed long, packed ulong
					4: int, uint, packed long, packed ulong, float, char (UTF16), TypeID
					5: packed long, packed ulong
					6: packed long, packed ulong
					7: packed long, packed ulong
					8: long, ulong, packed long, packed ulong, double
					9: packed long, packed ulong
	Edtr 	allow to see content of primitive types in the container inspector
				integer types
				string type (take encoding into account)
				packed data types: packed bools, packed ulongs, packed longs
				TypeID values (with corresponding type name)
	Edtr 	color scheme should support dark mode
?	Edtr 	replace Json.Net dll by source code
				move to internal namespace
				strip unused code


===================================================================================
	BACKLOG
===================================================================================

	Core 	improve performance of BinaryStream.CopyTo by avoiding frequent Seek operations
	Othr 	compare performance, memory and garbage with
				ProtoBuf
				CBOR
				XML serialization in C#
				NewtonSoft Json.Net
				Unity Json serialization
	Edtr 	correctly handle rare errors when creating ContainerEditorInfo
				content table reading (ivalid size, position)
				some entries (partially) outside the stream data
	Edtr 	add 'collapse similar inner entries' display option
	Srlz 	add serializers for common Unity types
				Mesh
				Material
				Renderer
	Core 	use C#5 Dictionary class to improve performance


===================================================================================
	DONE/CHANGELOG
===================================================================================

0.2

+	Core 	improve performance of Container.GetLastWrittenVersion
+				add content table integrity check
+	Core 	avoid allocations/copies in Container.CleanUp

0.1

+	Edtr 	fix table column headers offset
+	Edtr 	show human-friendly object size labels
+	Edtr	fix SerializeList/Array entries in editor window
+				show correct entry ref types
+				show the list/array entries in normal font
+	Edtr 	add even/odd line background
+	Edtr 	make 'Self' column optional
+	Edtr	add Json view of the objects in popup window
+	Edtr 	improve Json popup window
+	Core 	fix erroneous meta size for root objects and table
+	Edtr 	make Json preview pretty
+				add info about object types
+				show warning for Json-izing large objects
-				monospace font (not so necessary, but hard to implement robustly)
+				4 characters indent
+				hide quotes around the property/field names
+				get rid of top level curved brackets and indent
+	Edtr 	improve size modes in the table
+				right column modes: total/effective(non-meta)
+				left column modes: none/self
+	Edtr 	improve editor UX
+				set window name and min size
+				move context menu options to the top
-				hide context menu options for non-container text assets (seems impossible)
+				support multiple container view windows
+	Edtr 	update ContainerRef(WithId) property renderers
+				add popup window with container content
+	Edtr 	show is/has old version markers
+				button to update serializers for the container
+				expand all 'has' sub-objects on id click
+	Edtr 	replace ShowMessage Json size warning with in-popup warning prompt
+	Hlpr 	get rid of external dependencies after refactoring
+	Core 	add signed packed operation
+	Edtr 	bug: not all container serializers updated if any of them has errors
+	Core 	update binary container format
+				use UInt32 for length in content table
+				use packed uint values in content table
+				change table header and info tokens
+	Othr	add licence (non-commertial use)
+	Othr	add readme










